---
- hosts: localhost
  become: true
  vars_files: vars.yaml
  tasks:
    - name: Registro de IP
      shell: hostname -I | awk '{print $1}'
      register: hip

    #INSTALAÇÃO BANCO DE DADOS
    - name: Download repo MariaDB
      become: true
      shell: sudo rpm --import https://yum.mariadb.org/RPM-GPG-KEY-MariaDB

    - name: Adding repo MariaDB
      become: true
      shell: zypper addrepo --gpgcheck --refresh https://yum.mariadb.org/10.5/opensuse/15/x86_64 mariadb
      ignore_errors: yes

    - name: Importing Keys MariaDB
      become: true
      shell: zypper --gpg-auto-import-keys refresh
    
    - name: Update all packages
      community.general.zypper:
        name: '*'
        state: latest
    
    - name: Install Mariadb-server
      community.general.zypper:
        name: MariaDB-server
        state: present
    
    - name: Install MariaDB-client
      community.general.zypper:
        name: MariaDB-client
        state: present

    - name: Starting and Enabling Mariadb
      become: true
      shell: sudo systemctl enable mariadb; sudo systemctl start mariadb

    # INSTALAÇÃO ZABBIX-PROXY
    - name: Download repo Zabbix
      become: true
      shell: sudo rpm -Uvh --nosignature https://repo.zabbix.com/zabbix/6.2/sles/15/x86_64/zabbix-release-6.2-1.sles15.noarch.rpm
      ignore_errors: yes

    - name: Installing repo Zabbix
      become: true
      shell: zypper --gpg-auto-import-keys refresh 'Zabbix Official Repository' 
      ignore_errors: yes

    - name: Install Zabbix-proxy
      community.general.zypper:
        name: zabbix-proxy-mysql
        state: present
        disable_gpg_check: true
    
    - name: Install Zabbix-mysql-scripts
      community.general.zypper:
        name: zabbix-sql-scripts
        state: present
        disable_gpg_check: true

    - name: Criando database zabbix_proxy
      become: true
      shell: sudo mysql -uroot -e "create database zabbix_proxy character set utf8mb4 collate utf8mb4_bin;"

    - name: Criando dbuser zabbix
      become: true
      shell: sudo mysql -uroot -e "create user zabbix@localhost identified by 'password';"

    - name: Granting Privileges of dbuser zabbix
      become: true
      shell: sudo mysql -uroot -e "grant all privileges on zabbix_proxy.* to zabbix@localhost;"

    - name: Refresh db
      become: true
      shell: sudo mysql -uroot -e "flush privileges;"
    
    - name: Importing db schema
      become: true
      shell: sudo cat /usr/share/doc/packages/zabbix-sql-scripts/mysql/proxy.sql | mysql -uzabbix -p zabbix_proxy
    
    - name: Setting ProxyMode
      become: true
      shell: sudo sed -i.bkp '13c\ProxyMode=0' /etc/zabbix/zabbix_proxy.conf
    
    - name: Setting ConfigFrequency
      become: true
      shell: sudo sed -i.bkp '14c\ConfigFrequency=60' /etc/zabbix/zabbix_proxy.conf
    
    - name: Setting Server
      become: true
      shell: sudo sed -i.bkp '32c\Server=172.31.114.108' /etc/zabbix/zabbix_proxy.conf
    
    - name: Setting Hostname
      become: true
      shell: sudo sed -i.bkp '42c\Hostname=ProxySuse' /etc/zabbix/zabbix_proxy.conf
    
    - name: Setting DBName
      become: true
      shell: sudo sed -i.bkp '171c\DBName=zabbix_proxy' /etc/zabbix/zabbix_proxy.conf
    
    - name: Setting DBUser
      become: true
      shell: sudo sed -i.bkp '186c\DBUser=zabbix' /etc/zabbix/zabbix_proxy.conf
    
    - name: Setting DBPassword
      become: true
      shell: sudo sed -i.bkp '194c\DBPassword=password' /etc/zabbix/zabbix_proxy.conf

    - name: Restartar Service
      become: true
      shell: systemctl restart zabbix-proxy

    - name: Habilitar Service
      become: true
      shell: systemctl enable zabbix-proxy
    
    - name: Install Zabbix-api
      become: true
      shell: pip3 install zabbix-api

    - name: Criando Proxy no Server
      local_action:
        module: zabbix_proxy
        server_url: "{{ urlserver }}"
        login_user: "{{ login_user }}"
        login_password: "{{ login_password }}"
        proxy_name: "{{ proxy_name }}"
        #description: ExampleProxy
        status: active # active or passive
        state: present
        timeout: 10
        interface:
            type: 0
            main: 1
            useip: 1
            ip: "{{ hip.stdout }}"
            dns: ""
            port: 10050